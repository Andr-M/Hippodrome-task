package com.javarush.test.level21.lesson16.big01;

import java.util.ArrayList;

public class Hippodrome {
    public static Hippodrome game;

    public static void main(String[] args) {
        game = new Hippodrome();
        Horse horse1 = new Horse("Dark", 3, 0);
        Horse horse2 = new Horse("White", 3, 0);
        Horse horse3 = new Horse("Blacky", 3, 0);

        game.getHorses().add(horse1);
        game.getHorses().add(horse2);
        game.getHorses().add(horse3);

        try {
            game.run();

        } catch (InterruptedException e) {
            System.out.println("InterruptedException");
        }

        game.printWinner();
    }

    private ArrayList<Horse> horses = new ArrayList<>();

    public ArrayList<Horse> getHorses() {
        return horses;
    }

    public void run() throws InterruptedException {
        for (int i = 0; i < 100; i++) {
            move();
            print();
            Thread.sleep(150);
        }
    }

    public void move() {
        for (Horse x: horses) {
            x.move();
        }
    }

    public void print() {
        for (Horse x: horses) {
            x.print();
        }
        System.out.println();
        System.out.println();
        System.out.println();
    }

    public Horse getWinner() {
        double maxDistance = 0;
        Horse winner = null;

        for (Horse x : horses) {
            if (x.getDistance() > maxDistance) {
                maxDistance = x.getDistance();
                winner = x;
            }
        }
        return winner;
    }

    public void printWinner() {
        System.out.println("Winner is " + getWinner().getName() + "!");
    }
}
